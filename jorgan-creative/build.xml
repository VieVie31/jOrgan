<project name="jOrgan-creative" default="dist" basedir=".">

  <property file="./build.properties" />

  <target name="clean">
    <delete dir="./target"/>
  </target>

  <target name="compile">
    <mkdir dir="./target/classes" />

  	<javac debug="true" source="1.5" target="1.5" srcdir="./src/main/java" destdir="./target/classes">
    	<classpath path="${jorgan.core.path}/target/classes" />
    	<classpath path="${jorgan.importer.path}/target/classes" />
    	<classpath>
            <fileset dir="${jorgan.core.path}/lib">
	            <include name="*" />
            </fileset>
   		</classpath>
  	</javac>
  	
	<native2ascii encoding="UTF8" src="./src/main/java" dest="./target/classes" includes="**/i18n*.properties" />
		
	<copy todir="./target/classes">
		<fileset dir="./src/main/java">
			<exclude name="**/*.java" />
	       	<exclude name="**/i18n*.properties" />
        </fileset>
    </copy>
  </target>

  <target name="native" depends="native-unix, native-windows">
  </target>

  <target name="native-common" depends="compile">
    <mkdir dir="./target/native" />

    <javah verbose="true" class="jorgan.creative.SoundFontManager" outputfile="./target/native/jorgan.creative.SoundFontManager.h">
      <classpath path="./target/classes" />
    </javah>
    
   	<condition property="isWindows">
      <os family="windows"/>
  	</condition>
  	<condition property="isUnix">
      <os family="unix"/>
  	</condition>
  </target>

  <target name="native-windows" depends="native-common" if="isWindows">
    <mkdir dir="./target/native" />

    <fail message="win.jdk not found">
      <condition>
        <resourcecount count="0">
          <fileset dir="${win.jdk}" includes="*" />
        </resourcecount>
      </condition>
    </fail>

    <fail message="win.cc not found">
      <condition>
        <resourcecount count="0">
          <fileset file="${win.cc}" />
        </resourcecount>
      </condition>
    </fail>
  	
    <exec failonerror="true" executable="${win.cc}">
      <arg value="-I${win.jdk}/include" />
      <arg value="-I${win.jdk}/include/win32" />
      <arg value="-I./lib/win32/include" />
      <arg value="-I./target/native" />
      <arg value="-Wall" />
      <arg value="-Wl,--kill-at" />
      <arg value="-shared" />
      <arg value="./src/main/native/win/creativeJNI.c" />
      <arg line="-o ./target/native/creativeJNI.dll" />
    </exec>
    
  	<property name="package" value="win-${os.arch}"/>
  </target>

  <target name="native-unix" depends="native-common" if="isUnix">
    <mkdir dir="./target/native" />

    <fail message="unix.jdk not found">
      <condition>
        <resourcecount count="0">
          <fileset dir="${unix.jdk}" includes="*" />
        </resourcecount>
      </condition>
    </fail>

  	<echo message="Note: requires package 'libasound2-dev' and 'awesfx'" />  	
    <exec failonerror="true" executable="${unix.cc}">
      <arg value="-I${unix.jdk}/include" />
      <arg value="-I${unix.jdk}/include/linux" />
      <arg value="-I./lib/linux/include" />
      <arg value="-I./target/native" />
      <arg value="-I${unix.awesfx}/include" />
      <arg value="-Wall" />
      <arg value="-fPIC" />
      <arg value="-shared" />
      <arg line="./src/main/native/linux/creativeJNI.c" />
      <arg line="${unix.awesfx}/awelib/awe_parm.c" />
      <arg line="${unix.awesfx}/awelib/bool.c" />
      <arg line="${unix.awesfx}/awelib/cmpopen.c" />
      <arg line="${unix.awesfx}/awelib/dummy.c" />
      <arg line="${unix.awesfx}/awelib/dynload.c" />
      <arg line="${unix.awesfx}/awelib/fskip.c" />
      <arg line="${unix.awesfx}/awelib/gentxt.c" />
      <arg line="${unix.awesfx}/awelib/loadbank.c" />
      <arg line="${unix.awesfx}/awelib/loadtext.c" />
      <arg line="${unix.awesfx}/awelib/malloc.c" />
      <arg line="${unix.awesfx}/awelib/optfile.c" />
      <arg line="${unix.awesfx}/awelib/parsesf.c" />
      <arg line="${unix.awesfx}/awelib/path.c" />
      <arg line="${unix.awesfx}/awelib/sample.c" />
      <arg line="${unix.awesfx}/awelib/sbkconv.c" />
      <arg line="${unix.awesfx}/awelib/sffile.c" />
      <arg line="${unix.awesfx}/awelib/sfitem.c" />
      <arg line="${unix.awesfx}/awelib/sfopts.c" />
      <arg line="${unix.awesfx}/awelib/sfout.c" />
      <arg line="${unix.awesfx}/awelib/slist.c" />
      <arg line="-o ./target/native/creativeJNI.so" />
    </exec>
  	
  	<property name="package" value="unix-${os.arch}"/>
  </target>

  <target name="dist" depends="clean, compile, native">
  	<mkdir dir="./target/marshal/lib" />

  	<copy todir="./target/marshal/lib">
      <fileset dir="./target/native">
  		<include name="*.dll"/>
        <include name="*.so"/>
      </fileset>
    </copy>
  	<jar file="./target/marshal/lib/creative.jar">
      <fileset dir="./target/classes" />
  	</jar>
  	
  	<mkdir dir="./target/marshal/dispositions" />
  	<copy todir="./target/marshal/dispositions">
      <fileset dir="./src/main/dispositions">
  		<include name="*"/>
      </fileset>
    </copy> 		

    <fail unless="package"/>
	<zip destfile="./target/jOrgan-creative-${creative.version}-${package}.zip">
      <fileset dir="./target/marshal" />
	</zip>  	
  </target>
</project>
